@using Business
@using Entities


<EditForm Model="oStorage">
        <div class="form-group">
            <label>Bodega</label>
        <InputSelect @bind-Value="oStorage.WarehouseID" class="form-control">
            <option value="">Seleccione una bodega..</option>
            @foreach(var warehouse in warehouses)
            {
                <option value="@warehouse.WarehouseID">@warehouse.WarehouseName</option>
            }
        </InputSelect>
        </div>
                <div class="form-group">
            <label>Producto</label>
        <InputSelect @bind-Value="oStorage.ProductId" class="form-control">
            <option value="">Seleccione un producto..</option>
            @foreach(var product in products)
            {
                <option value="@product.ProductId">@product.ProductName</option>
            }
        </InputSelect>
        </div>
        <input type="button" value="Almacenar Producto" @onclick="SaveStorage" />
</EditForm>

<div class="text-center h4">
    @message
</div>

@code {
    StorageEntity oStorage = new StorageEntity();

    List<WarehouseEntity> warehouses = new List<WarehouseEntity>();
    List<ProductEntity> products = new List<ProductEntity>();

    string message;

    protected override async Task OnInitializedAsync()
    {
        warehouses = B_WareHouse.WarehouseList();
        products = B_Product.ProductList();

    }

    private void SaveStorage()
    {
        oStorage.StorageId = $"{oStorage.StorageId}-{oStorage.ProductId}";

        //Guid.NewGuid().ToString();
        if (!B_Storage.IsProductInWareHouse(oStorage.StorageId))
        {
            oStorage.LastUpdate = DateTime.Now;

            B_Storage.CreateStorage(oStorage);

            message = "Producto Almacenado";
        }
        else
        {
            message = "Este producto ya existe en la bodega";
        }


    }


}
